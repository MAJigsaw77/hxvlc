name: Testing
on:
  push:
    branches: main
    paths-ignore:
      - '.github/workflows/format.yml'
      - '.github/workflows/pages.yml'
      - 'docs/**'
      - 'LICENSE'
      - 'README.md'
      - 'TODO.md'
      - 'haxelib.json'
      - 'hxformat.json'
  workflow_dispatch:
jobs:
  Desktop:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, ubuntu-latest]
        sample: [flixel, openfl]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install libvlc-dev libvlccore-dev vlc-bin vlc

      - name: Install Haxe Libraries
        run: |
          haxelib install lime --quiet
          haxelib install openfl --quiet
          haxelib dev hxvlc .

      - name: Setup Flixel Libraries
        if: matrix.sample == 'flixel'
        run: |
          haxelib install flixel --quiet
          haxelib install hscript --quiet

      - name: Setup hxcpp Library
        run: haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git --quiet && haxelib run lime rebuild hxcpp

      - name: List Installed Haxe Libraries
        run: haxelib list

      - name: Build Windows
        if: startsWith(matrix.os, 'windows')
        run: cd samples/${{matrix.sample}} && haxelib run lime build windows -debug -D gl_stats

      - name: Build MacOS
        if: startsWith(matrix.os, 'macos')
        run: cd samples/${{matrix.sample}} && haxelib run lime build mac -debug -D gl_stats && tar -zcvf build.tar.gz -C export/macos/bin .

      - name: Build Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: cd samples/${{matrix.sample}} && haxelib run lime build linux -debug -D gl_stats && tar -zcvf build.tar.gz -C export/linux/bin .

      - name: Upload Windows Artifact
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild-${{matrix.sample}}
          path: samples/${{matrix.sample}}/export/windows/bin
          if-no-files-found: warn

      - name: Upload MacOS Artifact
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@main
        with:
          name: macBuild-${{matrix.sample}}
          path: samples/${{matrix.sample}}/build.tar.gz
          if-no-files-found: warn

      - name: Upload Linux Artifact
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild-${{matrix.sample}}
          path: samples/${{matrix.sample}}/build.tar.gz
          if-no-files-found: warn

  Android:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        sample: [flixel, openfl]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Haxe Libraries
        run: |
          haxelib install lime --quiet
          haxelib install openfl --quiet
          haxelib install extension-androidtools --quiet --skip-dependencies
          haxelib dev hxvlc .

      - name: Setup Flixel Libraries
        if: matrix.sample == 'flixel'
        run: |
          haxelib install flixel --quiet
          haxelib install hscript --quiet

      - name: Setup hxcpp Library
        run: haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git --quiet && haxelib run lime rebuild hxcpp

      - name: List Installed Haxe Libraries
        run: haxelib list

      - name: Configure Environment
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true

      - name: Build
        run: cd samples/${{matrix.sample}} && haxelib run lime build android -debug -D gl_stats

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: androidBuild-${{matrix.sample}}
          path: samples/${{matrix.sample}}/export/android/bin/app/build/outputs/apk/debug
          if-no-files-found: warn
