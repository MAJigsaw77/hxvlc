name: Libs Building
on: workflow_dispatch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  Android:
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64, armv7a, x86, x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK 64bit
        if: ${{ matrix.arch == 'arm64' || matrix.arch == 'x86_64' }}
        uses: nttld/setup-ndk@main
        id: setup-ndk-64
        with:
          ndk-version: r28c

      - name: Setup Android NDK 32bit
        if: ${{ matrix.arch == 'armv7a' || matrix.arch == 'x86' }}
        uses: nttld/setup-ndk@main
        id: setup-ndk-32
        with:
          ndk-version: r21e

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Dependencies
        run: sudo apt-get update && sudo apt-get install -y gettext autopoint automake ant cmake build-essential libtool-bin lua5.2 liblua5.2-dev patch pkg-config protobuf-compiler ragel subversion unzip git flex python3 wget nasm meson ninja-build

      - name: Set Git Config User
        run: git config --global user.name "github-actions[bot]" && git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Compile Libs 64bit
        if: ${{ matrix.arch == 'arm64' || matrix.arch == 'x86_64' }}
        run: chmod +x project/vlc/scripts/Android-Building.sh && ./project/vlc/scripts/Android-Building.sh ${{ matrix.arch }}
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk-64.outputs.ndk-path }}
          ANDROID_NDK: ${{ steps.setup-ndk-64.outputs.ndk-path }}

      - name: Compile Libs 32bit
        if: ${{ matrix.arch == 'armv7a' || matrix.arch == 'x86' }}
        run: chmod +x project/vlc/scripts/Android-Building.sh && ./project/vlc/scripts/Android-Building.sh ${{ matrix.arch }}
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk-32.outputs.ndk-path }}
          ANDROID_NDK: ${{ steps.setup-ndk-32.outputs.ndk-path }}

      - name: Upload Build
        uses: actions/upload-artifact@main
        with:
          name: androidBuild-${{ matrix.arch }}
          path: |
            build
            LICENSE
          if-no-files-found: error
  iOS:
    strategy:
      fail-fast: false
      matrix:
        platform: [phone, simulator]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set Git Config User
        run: git config --global user.name "github-actions[bot]" && git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Compile Libs
        run: chmod +x project/vlc/scripts/iOS-Building.sh && ./project/vlc/scripts/iOS-Building.sh ${{ matrix.platform }}

      - name: Upload Build
        uses: actions/upload-artifact@main
        with:
          name: iosBuild-${{ matrix.platform }}
          path: |
            build
            LICENSE
          if-no-files-found: error
  Publisher:
    needs: [Android, iOS]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@main

      - name: Download Android arm64
        uses: actions/download-artifact@main
        with:
          name: androidBuild-arm64
          path: androidBuilds/arm64

      - name: Download Android armv7a
        uses: actions/download-artifact@main
        with:
          name: androidBuild-armv7a
          path: androidBuilds/armv7a

      - name: Download Android x86
        uses: actions/download-artifact@main
        with:
          name: androidBuild-x86
          path: androidBuilds/x86

      - name: Download Android x86_64
        uses: actions/download-artifact@main
        with:
          name: androidBuild-x86_64
          path: androidBuilds/x86_64

      - name: Move Android Libs
        run: |
          rm -rf project/vlc/lib/Android/*
          mkdir -p project/vlc/lib/Android
          cp -r androidBuilds/arm64/build/lib/* project/vlc/lib/Android/
          cp -r androidBuilds/armv7a/build/lib/* project/vlc/lib/Android/
          cp -r androidBuilds/x86/build/lib/* project/vlc/lib/Android/
          cp -r androidBuilds/x86_64/build/lib/* project/vlc/lib/Android/
          rm -rf androidBuilds

      - name: Download iOS Phone
        uses: actions/download-artifact@main
        with:
          name: iosBuild-phone
          path: iosBuilds/phone

      - name: Download iOS Simulator
        uses: actions/download-artifact@main
        with:
          name: iosBuild-simulator
          path: iosBuilds/simulator

      - name: Move iOS Libs
        run: |
          rm -rf project/vlc/lib/iOS/*
          mkdir -p project/vlc/lib/iOS
          cp -r iosBuilds/phone/build/lib/* project/vlc/lib/iOS/
          cp -r iosBuilds/simulator/build/lib/* project/vlc/lib/iOS/
          rm -rf iosBuilds

      - name: Push to GitHub
        uses: stefanzweifel/git-auto-commit-action@master
        with:
          commit_message: "Update Android and iOS libs."
